@model PortoGO.Web.ViewModels.PoiViewModel

@{
    ViewBag.Title = "Edit";
}

<section>
    <div class="container">
        <div class="center">
            <h2>Edit @Model.Description</h2>
        </div>
        <div class="row">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessHoursFromHour, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BusinessHoursFromHour, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BusinessHoursFromHour, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessHoursToHour, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BusinessHoursToHour, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BusinessHoursToHour, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <span class="insert-map"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TimeTovisit, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TimeTovisit, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TimeTovisit, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="tags" class="control-label col-md-2">Hashtags</label>
                        <div class="col-md-10">
                            @*<input type="text" class="form-control hashtags" id="tags">*@
                            @Html.EditorFor(model => model.HashtagString, new { htmlAttributes = new { @class = "form-control hashtags" } })
                        </div>

                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" value="Save" class="btn btn-danger"><i class="fa fa-floppy-o" aria-hidden="true"></i> Save</button> |
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-info" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

@section scripts{
    <script>
        $(document).ready(function () {
            $('.hashtags').tokenfield();
            var hashtags = {
                tags: []
            };

            @foreach (var item in @Model.Hashtags)
            {
            <text>

            hashtags.tags.push( '@item.Tag');

            </text>
            }

            $('.hashtags').tokenfield('setTokens', hashtags.tags);

            var lat = '@Model.Location.Latitude'.replace(',', '.');
            var lon = '@Model.Location.Longitude'.replace(',', '.');

            var insert = $('.insert-map');
            var src = '<iframe width="80%" height="400" src="http://www.mapsdirections.info/pt/crie-um-google-map/map.php?width=100%&height=400&hl=ru&coord=' + lat + ',' + lon + '&ie=UTF8&t=&z=14&iwloc=A&output=embed" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"></iframe>';

            insert.html(src);
        });
    </script>

}

